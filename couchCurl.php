<?php

define('COUCH_HOST','http://localhost:5984');
define('COUCH_DB','test');

class couchCurl{
        // if no title provided statement changes to a PUT and the title is generated by couchdb
        function _cc_put($json,$title=NULL,$db=NULL){return self::__cc( ($title == NULL?'POST':'PUT'  ) , ($title==NULL?"'":"/$title'"). " -d \ '$json'",$db);}
        
        function _cc_get($title,$range_stop=FALSE,$db=NULL){return self::__cc('GET',"/$title'",$db);}

        function _cc_delete($title,$rev,$db=NULL){return self::__cc('DELETE',"/$title?rev=$rev'".' -H "Content-Length:1"',$db);}

        function _cc_set_revs_limit($limit=1000,$db=NULL){return(exec('curl -X PUT -d "'.$limit.'" '. "'".COUCH_HOST."/".self::___db($db)."/_revs_limit' -s"));}
	
        function _cc_changes($db=NULL,$options=NULL){return self::__cc('GET',"/_changes".self::___b_opt($options) ."'",$db);}

        function _cc_get_revs_limit($db=NULL){return(self::__cc_host("/".self::___db($db)."/_revs_limit'"));}

        function _cc_all_docs($db=null,$options=null,$ids=null){
        // provide id's as second param (array with strings) if wanting to do a multi doc select
        	return self::__cc( ($ids!=NULL?'POST':'GET')  , "/_all_docs".self::___b_opt($options) .  ($ids!=NULL? "' -d \ '".json_encode(array('keys'=>$ids))."'":"'") ,$db);
        }

   		function _cc_copy($doc,$dest,$rev_id=NULL,$db=NULL){
		  	$query= "/".self::___db($db)."/$doc'". ' -H "Destination: '.$dest.'" -H "Content-Type: application/json"';
			return  self::__cc_host($query,'COPY');
        }
        
        function _cc_copy_to($doc,$dest,$dest_c_rev,$db){
        // Could combine above, but this is easier to understand (experimental...)
        // Provide document id,destination id, and the current ID of that destiation
        // future enhancements could automatically look this up via this library..
		  	$query= "/".self::___db($db)."/$doc'". ' -H "Destination: '.$dest.'?rev='.$dest_c_rev.'" -H "Content-Type: application/json"';
        	return  self::__cc_host($query,'COPY');
        }

        function __cc($method='GET',$query,$db=NULL,$no_exe=true){
			$query = "curl -X $method '" . COUCH_HOST."/".self::___db($db)."$query" . ' -s  -H "HTTP/1.0" '. ($method=='PUT' || $method == 'POST'? ' -H "Content-type: application/json"':NULL) ;
			// returns the appropriate curl call, no exe is for debugging (returns the command as a string)
			$result = ($no_exe==false? exec($query,$output):$query);
			// incase we have a resultset with more than a row - otherwise result is permissible
			if(count($output > 1) && is_array($output)) {
					$output = implode('',$output);
					return $output;
			}
			return ($result?$result:($no_exec==true?$query:false));
        }

        function __cc_host($call,$method='GET'){
        // provides more direct access to the couch_host for some specific api calls and returns the first element in an array return
        // found in functions like get_all_dbs , get_revs_limit
			$query = "curl -X $method '" . COUCH_HOST. $call . " -s";
			$result = exec($query,$output);
			return ($output?$output[0]:$result);
        }
        // built to reduce code, checks options array, returns built query if is array, otherwise null
		// used with functions that allow options
        function ___b_opt($options){return ($options!=NULL && is_array($options)? '?'. http_build_query($options):NULL);}
		function ___db($db){return ($db == NULL?COUCH_DB :$db);}
}